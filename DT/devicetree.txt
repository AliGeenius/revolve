/* This file was auto-generated by TI PinMux on 11/20/2017 at 8:52:04 PM. */
/* This file should only be used as a reference.  Some pins/peripherals, */
/* depending on your use case, may need additional configuration. */

/* Some or all the pins from the following groups are not used by device tree 
   myadc1
   myosc1
   myosc2
   myemif1
   myglue1
   mytest1
   myusb1
   myusb2
*/

mymmc1_pins_default: mymmc1_pins_default {
	pinctrl-single,pins = <
		0x80 ( PIN_INPUT | MUX_MODE2 ) /* (U9) gpmc_csn1.mmc1_clk */
		0x84 ( PIN_INPUT | MUX_MODE2 ) /* (V9) gpmc_csn2.mmc1_cmd */
		0x0 ( PIN_INPUT | MUX_MODE1 ) /* (U7) gpmc_ad0.mmc1_dat0 */
		0x4 ( PIN_INPUT | MUX_MODE1 ) /* (V7) gpmc_ad1.mmc1_dat1 */
		0x8 ( PIN_INPUT | MUX_MODE1 ) /* (R8) gpmc_ad2.mmc1_dat2 */
		0xc ( PIN_INPUT | MUX_MODE1 ) /* (T8) gpmc_ad3.mmc1_dat3 */
		0x10 ( PIN_INPUT | MUX_MODE1 ) /* (U8) gpmc_ad4.mmc1_dat4 */
		0x14 ( PIN_INPUT | MUX_MODE1 ) /* (V8) gpmc_ad5.mmc1_dat5 */
		0x18 ( PIN_INPUT | MUX_MODE1 ) /* (R9) gpmc_ad6.mmc1_dat6 */
		0x1c ( PIN_INPUT | MUX_MODE1 ) /* (T9) gpmc_ad7.mmc1_dat7 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mymmc1_pins_sleep: mymmc1_pins_sleep {
	pinctrl-single,pins = <
		0x80 ( ) /* (U9) gpmc_csn1.mmc1_clk */
		0x84 ( ) /* (V9) gpmc_csn2.mmc1_cmd */
		0x0 ( ) /* (U7) gpmc_ad0.mmc1_dat0 */
		0x4 ( ) /* (V7) gpmc_ad1.mmc1_dat1 */
		0x8 ( ) /* (R8) gpmc_ad2.mmc1_dat2 */
		0xc ( ) /* (T8) gpmc_ad3.mmc1_dat3 */
		0x10 ( ) /* (U8) gpmc_ad4.mmc1_dat4 */
		0x14 ( ) /* (V8) gpmc_ad5.mmc1_dat5 */
		0x18 ( ) /* (R9) gpmc_ad6.mmc1_dat6 */
		0x1c ( ) /* (T9) gpmc_ad7.mmc1_dat7 */
	>;
};

myehrpwm1_pins_default: myehrpwm1_pins_default {
	pinctrl-single,pins = <
		0x20 ( PIN_OUTPUT | MUX_MODE4 ) /* (U10) gpmc_ad8.ehrpwm2A */
		0x24 ( PIN_OUTPUT | MUX_MODE4 ) /* (T10) gpmc_ad9.ehrpwm2B */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myehrpwm1_pins_sleep: myehrpwm1_pins_sleep {
	pinctrl-single,pins = <
		0x20 ( ) /* (U10) gpmc_ad8.ehrpwm2A */
		0x24 ( ) /* (T10) gpmc_ad9.ehrpwm2B */
	>;
};

myehrpwm2_pins_default: myehrpwm2_pins_default {
	pinctrl-single,pins = <
		0x48 ( PIN_OUTPUT | MUX_MODE6 ) /* (U14) gpmc_a2.ehrpwm1A */
		0x4c ( PIN_OUTPUT | MUX_MODE6 ) /* (T14) gpmc_a3.ehrpwm1B */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myehrpwm2_pins_sleep: myehrpwm2_pins_sleep {
	pinctrl-single,pins = <
		0x48 ( ) /* (U14) gpmc_a2.ehrpwm1A */
		0x4c ( ) /* (T14) gpmc_a3.ehrpwm1B */
	>;
};

mypru_pruss11_pins_default: mypru_pruss11_pins_default {
	pinctrl-single,pins = <
		0x190 ( PIN_OUTPUT | MUX_MODE5 ) /* (A13) mcasp0_aclkx.pr1_pru0_pru_r30[0] */
		0x194 ( PIN_OUTPUT | MUX_MODE5 ) /* (B13) mcasp0_fsx.pr1_pru0_pru_r30[1] */
		0x198 ( PIN_OUTPUT | MUX_MODE5 ) /* (D12) mcasp0_axr0.pr1_pru0_pru_r30[2] */
		0x19c ( PIN_OUTPUT | MUX_MODE5 ) /* (C12) mcasp0_ahclkr.pr1_pru0_pru_r30[3] */
		0x1a0 ( PIN_OUTPUT | MUX_MODE5 ) /* (B12) mcasp0_aclkr.pr1_pru0_pru_r30[4] */
		0x1a4 ( PIN_OUTPUT | MUX_MODE5 ) /* (C13) mcasp0_fsr.pr1_pru0_pru_r30[5] */
		0x1a8 ( PIN_OUTPUT | MUX_MODE5 ) /* (D13) mcasp0_axr1.pr1_pru0_pru_r30[6] */
		0x1ac ( PIN_OUTPUT | MUX_MODE5 ) /* (A14) mcasp0_ahclkx.pr1_pru0_pru_r30[7] */
		0xf0 ( PIN_OUTPUT | MUX_MODE5 ) /* (F17) mmc0_dat3.pr1_pru0_pru_r30[8] */
		0xf4 ( PIN_OUTPUT | MUX_MODE5 ) /* (F18) mmc0_dat2.pr1_pru0_pru_r30[9] */
		0xf8 ( PIN_OUTPUT | MUX_MODE5 ) /* (G15) mmc0_dat1.pr1_pru0_pru_r30[10] */
		0xfc ( PIN_OUTPUT | MUX_MODE5 ) /* (G16) mmc0_dat0.pr1_pru0_pru_r30[11] */
		0x100 ( PIN_OUTPUT | MUX_MODE5 ) /* (G17) mmc0_clk.pr1_pru0_pru_r30[12] */
		0x104 ( PIN_OUTPUT | MUX_MODE5 ) /* (G18) mmc0_cmd.pr1_pru0_pru_r30[13] */
		0x30 ( PIN_OUTPUT | MUX_MODE6 ) /* (T12) gpmc_ad12.pr1_pru0_pru_r30[14] */
		0x34 ( PIN_OUTPUT | MUX_MODE6 ) /* (R12) gpmc_ad13.pr1_pru0_pru_r30[15] */
		0x38 ( PIN_INPUT | MUX_MODE6 ) /* (V13) gpmc_ad14.pr1_pru0_pru_r31[14] */
		0x3c ( PIN_INPUT | MUX_MODE6 ) /* (U13) gpmc_ad15.pr1_pru0_pru_r31[15] */
		0x1b4 ( PIN_INPUT | MUX_MODE5 ) /* (D14) xdma_event_intr1.pr1_pru0_pru_r31[16] */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mypru_pruss11_pins_sleep: mypru_pruss11_pins_sleep {
	pinctrl-single,pins = <
		0x190 ( ) /* (A13) mcasp0_aclkx.pr1_pru0_pru_r30[0] */
		0x194 ( ) /* (B13) mcasp0_fsx.pr1_pru0_pru_r30[1] */
		0x198 ( ) /* (D12) mcasp0_axr0.pr1_pru0_pru_r30[2] */
		0x19c ( ) /* (C12) mcasp0_ahclkr.pr1_pru0_pru_r30[3] */
		0x1a0 ( ) /* (B12) mcasp0_aclkr.pr1_pru0_pru_r30[4] */
		0x1a4 ( ) /* (C13) mcasp0_fsr.pr1_pru0_pru_r30[5] */
		0x1a8 ( ) /* (D13) mcasp0_axr1.pr1_pru0_pru_r30[6] */
		0x1ac ( ) /* (A14) mcasp0_ahclkx.pr1_pru0_pru_r30[7] */
		0xf0 ( ) /* (F17) mmc0_dat3.pr1_pru0_pru_r30[8] */
		0xf4 ( ) /* (F18) mmc0_dat2.pr1_pru0_pru_r30[9] */
		0xf8 ( ) /* (G15) mmc0_dat1.pr1_pru0_pru_r30[10] */
		0xfc ( ) /* (G16) mmc0_dat0.pr1_pru0_pru_r30[11] */
		0x100 ( ) /* (G17) mmc0_clk.pr1_pru0_pru_r30[12] */
		0x104 ( ) /* (G18) mmc0_cmd.pr1_pru0_pru_r30[13] */
		0x30 ( ) /* (T12) gpmc_ad12.pr1_pru0_pru_r30[14] */
		0x34 ( ) /* (R12) gpmc_ad13.pr1_pru0_pru_r30[15] */
		0x38 ( ) /* (V13) gpmc_ad14.pr1_pru0_pru_r31[14] */
		0x3c ( ) /* (U13) gpmc_ad15.pr1_pru0_pru_r31[15] */
		0x1b4 ( ) /* (D14) xdma_event_intr1.pr1_pru0_pru_r31[16] */
	>;
};

myuart1_pins_default: myuart1_pins_default {
	pinctrl-single,pins = <
		0x70 ( PIN_INPUT | MUX_MODE6 ) /* (T17) gpmc_wait0.uart4_rxd */
		0x74 ( PIN_OUTPUT | MUX_MODE6 ) /* (U17) gpmc_wpn.uart4_txd */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myuart1_pins_sleep: myuart1_pins_sleep {
	pinctrl-single,pins = <
		0x70 ( ) /* (T17) gpmc_wait0.uart4_rxd */
		0x74 ( ) /* (U17) gpmc_wpn.uart4_txd */
	>;
};

myrtc1_pins_default: myrtc1_pins_default {
	pinctrl-single,pins = <
		0x1f8 ( PIN_INPUT | MUX_MODE0 ) /* (B5) RTC_PORz.RTC_PORz */
		0x200 ( PIN_OUTPUT | MUX_MODE0 ) /* (C5) EXT_WAKEUP.EXT_WAKEUP */
		0x1fc ( PIN_INPUT | MUX_MODE0 ) /* (C6) PMIC_POWER_EN.PMIC_POWER_EN */
		0x204 ( PIN_INPUT | MUX_MODE0 ) /* (B4) ENZ_KALDO_1P8V.ENZ_KALDO_1P8V */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myrtc1_pins_sleep: myrtc1_pins_sleep {
	pinctrl-single,pins = <
		0x1f8 ( ) /* (B5) RTC_PORz.RTC_PORz */
		0x200 ( ) /* (C5) EXT_WAKEUP.EXT_WAKEUP */
		0x1fc ( ) /* (C6) PMIC_POWER_EN.PMIC_POWER_EN */
		0x204 ( ) /* (B4) ENZ_KALDO_1P8V.ENZ_KALDO_1P8V */
	>;
};

mymdio1_pins_default: mymdio1_pins_default {
	pinctrl-single,pins = <
		0x14c ( PIN_OUTPUT | MUX_MODE0 ) /* (M18) mdio_clk.mdio_clk */
		0x148 ( PIN_INPUT | MUX_MODE0 ) /* (M17) mdio_data.mdio_data */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mymdio1_pins_sleep: mymdio1_pins_sleep {
	pinctrl-single,pins = <
		0x14c ( ) /* (M18) mdio_clk.mdio_clk */
		0x148 ( ) /* (M17) mdio_data.mdio_data */
	>;
};

myspi1_pins_default: myspi1_pins_default {
	pinctrl-single,pins = <
		0x164 ( PIN_INPUT | MUX_MODE4 ) /* (C18) eCAP0_in_PWM0_out.spi1_sclk */
		0x168 ( PIN_INPUT | MUX_MODE4 ) /* (E18) uart0_ctsn.spi1_d0 */
		0x16c ( PIN_INPUT | MUX_MODE4 ) /* (E17) uart0_rtsn.spi1_d1 */
		0x178 ( PIN_INPUT | MUX_MODE4 ) /* (D18) uart1_ctsn.spi1_cs0 */
		0x17c ( PIN_INPUT | MUX_MODE4 ) /* (D17) uart1_rtsn.spi1_cs1 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myspi1_pins_sleep: myspi1_pins_sleep {
	pinctrl-single,pins = <
		0x164 ( ) /* (C18) eCAP0_in_PWM0_out.spi1_sclk */
		0x168 ( ) /* (E18) uart0_ctsn.spi1_d0 */
		0x16c ( ) /* (E17) uart0_rtsn.spi1_d1 */
		0x178 ( ) /* (D18) uart1_ctsn.spi1_cs0 */
		0x17c ( ) /* (D17) uart1_rtsn.spi1_cs1 */
	>;
};

myspi2_pins_default: myspi2_pins_default {
	pinctrl-single,pins = <
		0x150 ( PIN_INPUT | MUX_MODE0 ) /* (A17) spi0_sclk.spi0_sclk */
		0x154 ( PIN_INPUT | MUX_MODE0 ) /* (B17) spi0_d0.spi0_d0 */
		0x158 ( PIN_INPUT | MUX_MODE0 ) /* (B16) spi0_d1.spi0_d1 */
		0x15c ( PIN_INPUT | MUX_MODE0 ) /* (A16) spi0_cs0.spi0_cs0 */
		0x160 ( PIN_INPUT | MUX_MODE0 ) /* (C15) spi0_cs1.spi0_cs1 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myspi2_pins_sleep: myspi2_pins_sleep {
	pinctrl-single,pins = <
		0x150 ( ) /* (A17) spi0_sclk.spi0_sclk */
		0x154 ( ) /* (B17) spi0_d0.spi0_d0 */
		0x158 ( ) /* (B16) spi0_d1.spi0_d1 */
		0x15c ( ) /* (A16) spi0_cs0.spi0_cs0 */
		0x160 ( ) /* (C15) spi0_cs1.spi0_cs1 */
	>;
};

mygpio2_pins_default: mygpio2_pins_default {
	pinctrl-single,pins = <
		0x88 ( PIN_INPUT | MUX_MODE7 ) /* (T13) gpmc_csn3.gpio2[0] */
		0x8c ( PIN_INPUT | MUX_MODE7 ) /* (V12) gpmc_clk.gpio2[1] */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mygpio2_pins_sleep: mygpio2_pins_sleep {
	pinctrl-single,pins = <
		0x88 ( ) /* (T13) gpmc_csn3.gpio2[0] */
		0x8c ( ) /* (V12) gpmc_clk.gpio2[1] */
	>;
};

mygpio3_pins_default: mygpio3_pins_default {
	pinctrl-single,pins = <
		0x1e4 ( PIN_INPUT | MUX_MODE7 ) /* (C14) EMU0.gpio3[7] */
		0x1e8 ( PIN_INPUT | MUX_MODE7 ) /* (B14) EMU1.gpio3[8] */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mygpio3_pins_sleep: mygpio3_pins_sleep {
	pinctrl-single,pins = <
		0x1e4 ( ) /* (C14) EMU0.gpio3[7] */
		0x1e8 ( ) /* (B14) EMU1.gpio3[8] */
	>;
};

mygpio7_pins_default: mygpio7_pins_default {
	pinctrl-single,pins = <
		0x40 ( PIN_INPUT | MUX_MODE7 ) /* (R13) gpmc_a0.gpio1[16] */
		0x44 ( PIN_INPUT | MUX_MODE7 ) /* (V14) gpmc_a1.gpio1[17] */
		0x58 ( PIN_INPUT | MUX_MODE7 ) /* (U15) gpmc_a6.gpio1[22] */
		0x5c ( PIN_INPUT | MUX_MODE7 ) /* (T15) gpmc_a7.gpio1[23] */
		0x60 ( PIN_INPUT | MUX_MODE7 ) /* (V16) gpmc_a8.gpio1[24] */
		0x64 ( PIN_INPUT | MUX_MODE7 ) /* (U16) gpmc_a9.gpio1[25] */
		0x68 ( PIN_INPUT | MUX_MODE7 ) /* (T16) gpmc_a10.gpio1[26] */
		0x6c ( PIN_INPUT | MUX_MODE7 ) /* (V17) gpmc_a11.gpio1[27] */
		0x78 ( PIN_INPUT | MUX_MODE7 ) /* (U18) gpmc_be1n.gpio1[28] */
		0x7c ( PIN_INPUT | MUX_MODE7 ) /* (V6) gpmc_csn0.gpio1[29] */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mygpio7_pins_sleep: mygpio7_pins_sleep {
	pinctrl-single,pins = <
		0x40 ( ) /* (R13) gpmc_a0.gpio1[16] */
		0x44 ( ) /* (V14) gpmc_a1.gpio1[17] */
		0x58 ( ) /* (U15) gpmc_a6.gpio1[22] */
		0x5c ( ) /* (T15) gpmc_a7.gpio1[23] */
		0x60 ( ) /* (V16) gpmc_a8.gpio1[24] */
		0x64 ( ) /* (U16) gpmc_a9.gpio1[25] */
		0x68 ( ) /* (T16) gpmc_a10.gpio1[26] */
		0x6c ( ) /* (V17) gpmc_a11.gpio1[27] */
		0x78 ( ) /* (U18) gpmc_be1n.gpio1[28] */
		0x7c ( ) /* (V6) gpmc_csn0.gpio1[29] */
	>;
};

mygpio8_pins_default: mygpio8_pins_default {
	pinctrl-single,pins = <
		0x28 ( PIN_INPUT | MUX_MODE7 ) /* (T11) gpmc_ad10.gpio0[26] */
		0x2c ( PIN_INPUT | MUX_MODE7 ) /* (U12) gpmc_ad11.gpio0[27] */
		0x144 ( PIN_INPUT | MUX_MODE7 ) /* (H18) rmii1_refclk.gpio0[29] */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mygpio8_pins_sleep: mygpio8_pins_sleep {
	pinctrl-single,pins = <
		0x28 ( ) /* (T11) gpmc_ad10.gpio0[26] */
		0x2c ( ) /* (U12) gpmc_ad11.gpio0[27] */
		0x144 ( ) /* (H18) rmii1_refclk.gpio0[29] */
	>;
};

myeqep1_pins_default: myeqep1_pins_default {
	pinctrl-single,pins = <
		0x50 ( PIN_INPUT | MUX_MODE6 ) /* (R14) gpmc_a4.eQEP1A_in */
		0x54 ( PIN_INPUT | MUX_MODE6 ) /* (V15) gpmc_a5.eQEP1B_in */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myeqep1_pins_sleep: myeqep1_pins_sleep {
	pinctrl-single,pins = <
		0x50 ( ) /* (R14) gpmc_a4.eQEP1A_in */
		0x54 ( ) /* (V15) gpmc_a5.eQEP1B_in */
	>;
};

myecap1_pins_default: myecap1_pins_default {
	pinctrl-single,pins = <
		0x170 ( PIN_INPUT | MUX_MODE4 ) /* (E15) uart0_rxd.eCAP2_in_PWM2_out */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myecap1_pins_sleep: myecap1_pins_sleep {
	pinctrl-single,pins = <
		0x170 ( ) /* (E15) uart0_rxd.eCAP2_in_PWM2_out */
	>;
};

myecap2_pins_default: myecap2_pins_default {
	pinctrl-single,pins = <
		0x174 ( PIN_INPUT | MUX_MODE4 ) /* (E16) uart0_txd.eCAP1_in_PWM1_out */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myecap2_pins_sleep: myecap2_pins_sleep {
	pinctrl-single,pins = <
		0x174 ( ) /* (E16) uart0_txd.eCAP1_in_PWM1_out */
	>;
};

myglue1_pins_default: myglue1_pins_default {
	pinctrl-single,pins = <
		0x1b8 ( PIN_INPUT | MUX_MODE0 ) /* (A10) nRESETIN_OUT.nRESETIN_OUT */
		0x1b0 ( PIN_OUTPUT | MUX_MODE3 ) /* (A15) xdma_event_intr0.clkout1 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myglue1_pins_sleep: myglue1_pins_sleep {
	pinctrl-single,pins = <
		0x1b8 ( ) /* (A10) nRESETIN_OUT.nRESETIN_OUT */
		0x1b0 ( ) /* (A15) xdma_event_intr0.clkout1 */
	>;
};

myi2c1_pins_default: myi2c1_pins_default {
	pinctrl-single,pins = <
		0x18c ( PIN_INPUT | MUX_MODE0 ) /* (C16) I2C0_SCL.I2C0_SCL */
		0x188 ( PIN_INPUT | MUX_MODE0 ) /* (C17) I2C0_SDA.I2C0_SDA */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myi2c1_pins_sleep: myi2c1_pins_sleep {
	pinctrl-single,pins = <
		0x18c ( ) /* (C16) I2C0_SCL.I2C0_SCL */
		0x188 ( ) /* (C17) I2C0_SDA.I2C0_SDA */
	>;
};

myi2c2_pins_default: myi2c2_pins_default {
	pinctrl-single,pins = <
		0x184 ( PIN_INPUT | MUX_MODE3 ) /* (D15) uart1_txd.I2C1_SCL */
		0x180 ( PIN_INPUT | MUX_MODE3 ) /* (D16) uart1_rxd.I2C1_SDA */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myi2c2_pins_sleep: myi2c2_pins_sleep {
	pinctrl-single,pins = <
		0x184 ( ) /* (D15) uart1_txd.I2C1_SCL */
		0x180 ( ) /* (D16) uart1_rxd.I2C1_SDA */
	>;
};

mymii2_pins_default: mymii2_pins_default {
	pinctrl-single,pins = <
		0x108 ( PIN_INPUT | MUX_MODE0 ) /* (H16) gmii1_col.gmii1_col */
		0x10c ( PIN_INPUT | MUX_MODE0 ) /* (H17) gmii1_crs.gmii1_crs */
		0x110 ( PIN_INPUT | MUX_MODE0 ) /* (J15) gmii1_rxer.gmii1_rxer */
		0x114 ( PIN_OUTPUT | MUX_MODE0 ) /* (J16) gmii1_txen.gmii1_txen */
		0x118 ( PIN_INPUT | MUX_MODE0 ) /* (J17) gmii1_rxdv.gmii1_rxdv */
		0x12c ( PIN_INPUT | MUX_MODE0 ) /* (K18) gmii1_txclk.gmii1_txclk */
		0x130 ( PIN_INPUT | MUX_MODE0 ) /* (L18) gmii1_rxclk.gmii1_rxclk */
		0x128 ( PIN_OUTPUT | MUX_MODE0 ) /* (K17) gmii1_txd0.gmii1_txd0 */
		0x124 ( PIN_OUTPUT | MUX_MODE0 ) /* (K16) gmii1_txd1.gmii1_txd1 */
		0x120 ( PIN_OUTPUT | MUX_MODE0 ) /* (K15) gmii1_txd2.gmii1_txd2 */
		0x11c ( PIN_OUTPUT | MUX_MODE0 ) /* (J18) gmii1_txd3.gmii1_txd3 */
		0x140 ( PIN_INPUT | MUX_MODE0 ) /* (M16) gmii1_rxd0.gmii1_rxd0 */
		0x13c ( PIN_INPUT | MUX_MODE0 ) /* (L15) gmii1_rxd1.gmii1_rxd1 */
		0x138 ( PIN_INPUT | MUX_MODE0 ) /* (L16) gmii1_rxd2.gmii1_rxd2 */
		0x134 ( PIN_INPUT | MUX_MODE0 ) /* (L17) gmii1_rxd3.gmii1_rxd3 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mymii2_pins_sleep: mymii2_pins_sleep {
	pinctrl-single,pins = <
		0x108 ( ) /* (H16) gmii1_col.gmii1_col */
		0x10c ( ) /* (H17) gmii1_crs.gmii1_crs */
		0x110 ( ) /* (J15) gmii1_rxer.gmii1_rxer */
		0x114 ( ) /* (J16) gmii1_txen.gmii1_txen */
		0x118 ( ) /* (J17) gmii1_rxdv.gmii1_rxdv */
		0x12c ( ) /* (K18) gmii1_txclk.gmii1_txclk */
		0x130 ( ) /* (L18) gmii1_rxclk.gmii1_rxclk */
		0x128 ( ) /* (K17) gmii1_txd0.gmii1_txd0 */
		0x124 ( ) /* (K16) gmii1_txd1.gmii1_txd1 */
		0x120 ( ) /* (K15) gmii1_txd2.gmii1_txd2 */
		0x11c ( ) /* (J18) gmii1_txd3.gmii1_txd3 */
		0x140 ( ) /* (M16) gmii1_rxd0.gmii1_rxd0 */
		0x13c ( ) /* (L15) gmii1_rxd1.gmii1_rxd1 */
		0x138 ( ) /* (L16) gmii1_rxd2.gmii1_rxd2 */
		0x134 ( ) /* (L17) gmii1_rxd3.gmii1_rxd3 */
	>;
};

myusb1_pins_default: myusb1_pins_default {
	pinctrl-single,pins = <
		0x21c ( PIN_OUTPUT | MUX_MODE0 ) /* (F16) USB0_DRVVBUS.USB0_DRVVBUS */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myusb1_pins_sleep: myusb1_pins_sleep {
	pinctrl-single,pins = <
		0x21c ( ) /* (F16) USB0_DRVVBUS.USB0_DRVVBUS */
	>;
};

myusb2_pins_default: myusb2_pins_default {
	pinctrl-single,pins = <
		0x234 ( PIN_OUTPUT | MUX_MODE0 ) /* (F15) USB1_DRVVBUS.USB1_DRVVBUS */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
myusb2_pins_sleep: myusb2_pins_sleep {
	pinctrl-single,pins = <
		0x234 ( ) /* (F15) USB1_DRVVBUS.USB1_DRVVBUS */
	>;
};

mylcdc1_pins_default: mylcdc1_pins_default {
	pinctrl-single,pins = <
		0xe0 ( PIN_OUTPUT | MUX_MODE0 ) /* (U5) lcd_vsync.lcd_vsync */
		0xe4 ( PIN_OUTPUT | MUX_MODE0 ) /* (R5) lcd_hsync.lcd_hsync */
		0xe8 ( PIN_OUTPUT | MUX_MODE0 ) /* (V5) lcd_pclk.lcd_pclk */
		0xec ( PIN_OUTPUT | MUX_MODE0 ) /* (R6) lcd_ac_bias_en.lcd_ac_bias_en */
		0xa0 ( PIN_OUTPUT | MUX_MODE0 ) /* (R1) lcd_data0.lcd_data0 */
		0xa4 ( PIN_OUTPUT | MUX_MODE0 ) /* (R2) lcd_data1.lcd_data1 */
		0xa8 ( PIN_OUTPUT | MUX_MODE0 ) /* (R3) lcd_data2.lcd_data2 */
		0xac ( PIN_OUTPUT | MUX_MODE0 ) /* (R4) lcd_data3.lcd_data3 */
		0xb0 ( PIN_OUTPUT | MUX_MODE0 ) /* (T1) lcd_data4.lcd_data4 */
		0xb4 ( PIN_OUTPUT | MUX_MODE0 ) /* (T2) lcd_data5.lcd_data5 */
		0xb8 ( PIN_OUTPUT | MUX_MODE0 ) /* (T3) lcd_data6.lcd_data6 */
		0xbc ( PIN_OUTPUT | MUX_MODE0 ) /* (T4) lcd_data7.lcd_data7 */
		0xc0 ( PIN_OUTPUT | MUX_MODE0 ) /* (U1) lcd_data8.lcd_data8 */
		0xc4 ( PIN_OUTPUT | MUX_MODE0 ) /* (U2) lcd_data9.lcd_data9 */
		0xc8 ( PIN_OUTPUT | MUX_MODE0 ) /* (U3) lcd_data10.lcd_data10 */
		0xcc ( PIN_OUTPUT | MUX_MODE0 ) /* (U4) lcd_data11.lcd_data11 */
		0xd0 ( PIN_OUTPUT | MUX_MODE0 ) /* (V2) lcd_data12.lcd_data12 */
		0xd4 ( PIN_OUTPUT | MUX_MODE0 ) /* (V3) lcd_data13.lcd_data13 */
		0xd8 ( PIN_OUTPUT | MUX_MODE0 ) /* (V4) lcd_data14.lcd_data14 */
		0xdc ( PIN_OUTPUT | MUX_MODE0 ) /* (T5) lcd_data15.lcd_data15 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mylcdc1_pins_sleep: mylcdc1_pins_sleep {
	pinctrl-single,pins = <
		0xe0 ( ) /* (U5) lcd_vsync.lcd_vsync */
		0xe4 ( ) /* (R5) lcd_hsync.lcd_hsync */
		0xe8 ( ) /* (V5) lcd_pclk.lcd_pclk */
		0xec ( ) /* (R6) lcd_ac_bias_en.lcd_ac_bias_en */
		0xa0 ( ) /* (R1) lcd_data0.lcd_data0 */
		0xa4 ( ) /* (R2) lcd_data1.lcd_data1 */
		0xa8 ( ) /* (R3) lcd_data2.lcd_data2 */
		0xac ( ) /* (R4) lcd_data3.lcd_data3 */
		0xb0 ( ) /* (T1) lcd_data4.lcd_data4 */
		0xb4 ( ) /* (T2) lcd_data5.lcd_data5 */
		0xb8 ( ) /* (T3) lcd_data6.lcd_data6 */
		0xbc ( ) /* (T4) lcd_data7.lcd_data7 */
		0xc0 ( ) /* (U1) lcd_data8.lcd_data8 */
		0xc4 ( ) /* (U2) lcd_data9.lcd_data9 */
		0xc8 ( ) /* (U3) lcd_data10.lcd_data10 */
		0xcc ( ) /* (U4) lcd_data11.lcd_data11 */
		0xd0 ( ) /* (V2) lcd_data12.lcd_data12 */
		0xd4 ( ) /* (V3) lcd_data13.lcd_data13 */
		0xd8 ( ) /* (V4) lcd_data14.lcd_data14 */
		0xdc ( ) /* (T5) lcd_data15.lcd_data15 */
	>;
};

mydebugss1_pins_default: mydebugss1_pins_default {
	pinctrl-single,pins = <
		0x1d0 ( PIN_INPUT | MUX_MODE0 ) /* (C11) TMS.TMS */
		0x1d4 ( PIN_INPUT | MUX_MODE0 ) /* (B11) TDI.TDI */
		0x1d8 ( PIN_OUTPUT | MUX_MODE0 ) /* (A11) TDO.TDO */
		0x1dc ( PIN_INPUT | MUX_MODE0 ) /* (A12) TCK.TCK */
		0x1e0 ( PIN_INPUT | MUX_MODE0 ) /* (B10) nTRST.nTRST */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mydebugss1_pins_sleep: mydebugss1_pins_sleep {
	pinctrl-single,pins = <
		0x1d0 ( ) /* (C11) TMS.TMS */
		0x1d4 ( ) /* (B11) TDI.TDI */
		0x1d8 ( ) /* (A11) TDO.TDO */
		0x1dc ( ) /* (A12) TCK.TCK */
		0x1e0 ( ) /* (B10) nTRST.nTRST */
	>;
};

mytimer1_pins_default: mytimer1_pins_default {
	pinctrl-single,pins = <
		0x94 ( PIN_INPUT | MUX_MODE2 ) /* (T7) gpmc_oen_ren.timer7 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mytimer1_pins_sleep: mytimer1_pins_sleep {
	pinctrl-single,pins = <
		0x94 ( ) /* (T7) gpmc_oen_ren.timer7 */
	>;
};

mytimer2_pins_default: mytimer2_pins_default {
	pinctrl-single,pins = <
		0x98 ( PIN_INPUT | MUX_MODE2 ) /* (U6) gpmc_wen.timer6 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mytimer2_pins_sleep: mytimer2_pins_sleep {
	pinctrl-single,pins = <
		0x98 ( ) /* (U6) gpmc_wen.timer6 */
	>;
};

mytimer3_pins_default: mytimer3_pins_default {
	pinctrl-single,pins = <
		0x9c ( PIN_INPUT | MUX_MODE2 ) /* (T6) gpmc_be0n_cle.timer5 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mytimer3_pins_sleep: mytimer3_pins_sleep {
	pinctrl-single,pins = <
		0x9c ( ) /* (T6) gpmc_be0n_cle.timer5 */
	>;
};

mytimer4_pins_default: mytimer4_pins_default {
	pinctrl-single,pins = <
		0x90 ( PIN_INPUT | MUX_MODE2 ) /* (R7) gpmc_advn_ale.timer4 */
	>;
};

/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
mytimer4_pins_sleep: mytimer4_pins_sleep {
	pinctrl-single,pins = <
		0x90 ( ) /* (R7) gpmc_advn_ale.timer4 */
	>;
};

